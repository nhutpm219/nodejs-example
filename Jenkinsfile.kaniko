pipeline {
	agent {
        kubernetes {
            yaml """
kind: Pod
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:debug
    imagePullPolicy: Always
    command:
    - sleep
    args:
    - 9999999
    volumeMounts:
      - name: jenkins-docker-cfg
        mountPath: /kaniko/.docker
  volumes:
  - name: jenkins-docker-cfg
    projected:
      sources:
      - secret:
          name: docker-credentials
          items:
            - key: .dockerconfigjson
              path: config.json
            """
        }
    }

	stages {
        stage('Build with Kaniko') {
            steps {
                container(name: 'kaniko', shell: '/busybox/sh') {
                    sh '''#!/busybox/sh
                        echo "FROM jenkins/inbound-agent:latest" > Dockerfile
                        /kaniko/executor --context `pwd` --destination be4e/test-kaniko:latest
                    '''
                }
            }
        }
	    // stage('Check Out') {
		// 	steps {
		// 		git 'https://github.com/nhutpm219/nodejs-example.git'
		// 	}
		// }

		// stage('Build') {
        //     environment {
        //         PATH = "/busybox:/kaniko:$PATH"
        //     }
        //     container(name: 'kaniko', shell: '/busybox/sh') {
        //         steps {
        //             sh '''#!/busybox/sh
        //             /kaniko/executor version'''
        //         }
        //     }
		// }

		// stage('Push') {
        //     steps {
        //         withCredentials([usernamePassword(credentialsId: 'dockerHub', passwordVariable: 'dockerHubPassword', usernameVariable: 'dockerHubUser')]) {
        //             sh "docker login -u ${env.dockerHubUser} -p ${env.dockerHubPassword}"
        //             sh 'docker push be4e/nodeapp_test:latest'
        //         }
        //     }
        // }
	}
}